/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package agroludos.gui;

import agroludos.db.user.Utente;
import agroludos.db.*;
import agroludos.db.exception.CampiVuotiException;
import agroludos.db.components.Competizione;
import agroludos.db.components.Optional;
import agroludos.db.exception.SrcScadutaException;
import java.awt.Component;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author Luciano
 */
public class JFrameHomePartec extends javax.swing.JFrame
{
    Utente agro;
    Competizione [] listComp;
    Optional [] listOpt;

    public JFrameHomePartec(Utente agro)
    {
        Shared.setDefaultLookAndFeel();
        try 
        {
            initComponents();
            this.agro=agro;
            CompetizioniDisponibiliLoadList();
        } 
        catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(null, "Impossibile caricare le competizioni\n" +
                    ex.toString(), "Errore", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    void CompetizioniDisponibiliLoadList() throws SQLException
    {
        Shared.CreateList(jListDisponibili,listComp=agro.getCompetizioniDisponibili());
    }
    
    void CompetizioniPrenotateLoadList() throws SQLException
    {
        Shared.CreateList(jListMyIscrizioni,listComp=agro.getCompetizioniPrenotate());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabsCompetizioni = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabelNPart = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabelMailMC = new javax.swing.JLabel();
        jLabelPrezzo_Comp = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabelMC = new javax.swing.JLabel();
        jIscrizioneCompetizione = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabelPrezzoTot = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListDisponibili = new javax.swing.JList();
        jPanel5 = new javax.swing.JPanel();
        jCheckBoxOpt1 = new javax.swing.JCheckBox();
        jCheckBoxOpt3 = new javax.swing.JCheckBox();
        jCheckBoxOpt2 = new javax.swing.JCheckBox();
        jLabelPrezzoOpt1 = new javax.swing.JLabel();
        jLabelPrezzoOpt2 = new javax.swing.JLabel();
        jLabelPrezzoOpt3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListMyIscrizioni = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        jLabelMyCosto = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jCheckBoxMyOptional1 = new javax.swing.JCheckBox();
        jCheckBoxMyOptional3 = new javax.swing.JCheckBox();
        jCheckBoxMyOptional2 = new javax.swing.JCheckBox();
        jLabelMyOptionalCosto1 = new javax.swing.JLabel();
        jLabelMyOptionalCosto2 = new javax.swing.JLabel();
        jLabelMyOptionalCosto3 = new javax.swing.JLabel();
        jButtonMyOptionalConferma = new javax.swing.JButton();
        jButtonMyOptionalAnnulla = new javax.swing.JButton();
        jLabelMyManagerMail = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabelMyManager = new javax.swing.JLabel();
        jButtonMyAnnullaIscrizione = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabelMyPrezzoTotale = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabsCompetizioni.setName(""); // NOI18N
        jTabsCompetizioni.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabsCompetizioniStateChanged(evt);
            }
        });

        jLabel7.setText("Posti rimanenti");
        jLabel7.setToolTipText("");

        jLabelNPart.setText("-");

        jLabel12.setText("Costo competizione");

        jLabelMailMC.setText("marco.rossi@agroludos.it");

        jLabelPrezzo_Comp.setText("-");

        jLabel26.setText("Manager");

        jLabelMC.setText("-");

        jIscrizioneCompetizione.setText("Iscriviti alla competizione");
        jIscrizioneCompetizione.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jIscrizioneCompetizioneActionPerformed(evt);
            }
        });

        jLabel17.setText("Prezzo totale");

        jLabelPrezzoTot.setText("-");

        jListDisponibili.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListDisponibiliValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jListDisponibili);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Scelta optional"));

        jCheckBoxOpt1.setText("-");
        jCheckBoxOpt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxOpt1ActionPerformed(evt);
            }
        });

        jCheckBoxOpt3.setText("-");
        jCheckBoxOpt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxOpt3ActionPerformed(evt);
            }
        });

        jCheckBoxOpt2.setText("-");
        jCheckBoxOpt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxOpt2ActionPerformed(evt);
            }
        });

        jLabelPrezzoOpt1.setText("-");

        jLabelPrezzoOpt2.setText("-");

        jLabelPrezzoOpt3.setText("-");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxOpt1)
                    .addComponent(jCheckBoxOpt2)
                    .addComponent(jCheckBoxOpt3))
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPrezzoOpt2)
                    .addComponent(jLabelPrezzoOpt1)
                    .addComponent(jLabelPrezzoOpt3))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxOpt1)
                    .addComponent(jLabelPrezzoOpt1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxOpt2)
                    .addComponent(jLabelPrezzoOpt2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxOpt3)
                    .addComponent(jLabelPrezzoOpt3)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3)
                    .addComponent(jIscrizioneCompetizione, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel7))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabelNPart))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelPrezzo_Comp))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(50, 50, 50)
                                .addComponent(jLabelPrezzoTot))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelMailMC)
                                    .addComponent(jLabelMC)))
                            .addComponent(jLabel26))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabelNPart))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabelPrezzo_Comp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabelPrezzoTot))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jLabelMC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMailMC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jIscrizioneCompetizione)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabsCompetizioni.addTab("Competizioni disponibili", jPanel2);
        jPanel2.setName("jPanelCompDisponibili");

        jListMyIscrizioni.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListMyIscrizioniValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jListMyIscrizioni);

        jLabel5.setText("Costo competizione");

        jLabelMyCosto.setText("-");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Modifica optional"));

        jCheckBoxMyOptional1.setText("-");
        jCheckBoxMyOptional1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMyOptional1ActionPerformed(evt);
            }
        });

        jCheckBoxMyOptional3.setText("-");
        jCheckBoxMyOptional3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMyOptional3ActionPerformed(evt);
            }
        });

        jCheckBoxMyOptional2.setText("-");
        jCheckBoxMyOptional2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMyOptional2ActionPerformed(evt);
            }
        });

        jLabelMyOptionalCosto1.setText("-");

        jLabelMyOptionalCosto2.setText("-");

        jLabelMyOptionalCosto3.setText("-");

        jButtonMyOptionalConferma.setText("Conferma");
        jButtonMyOptionalConferma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMyOptionalConfermaActionPerformed(evt);
            }
        });

        jButtonMyOptionalAnnulla.setText("Annulla");
        jButtonMyOptionalAnnulla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMyOptionalAnnullaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonMyOptionalConferma, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonMyOptionalAnnulla, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxMyOptional1)
                            .addComponent(jCheckBoxMyOptional2)
                            .addComponent(jCheckBoxMyOptional3))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMyOptionalCosto2)
                            .addComponent(jLabelMyOptionalCosto1)
                            .addComponent(jLabelMyOptionalCosto3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxMyOptional1)
                    .addComponent(jLabelMyOptionalCosto1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxMyOptional2)
                    .addComponent(jLabelMyOptionalCosto2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxMyOptional3)
                    .addComponent(jLabelMyOptionalCosto3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMyOptionalConferma)
                    .addComponent(jButtonMyOptionalAnnulla)))
        );

        jLabelMyManagerMail.setText("-");

        jLabel23.setText("Manager");

        jLabelMyManager.setText("-");

        jButtonMyAnnullaIscrizione.setText("Annulla iscrizione");
        jButtonMyAnnullaIscrizione.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMyAnnullaIscrizioneActionPerformed(evt);
            }
        });

        jLabel2.setText("Prezzo totale");

        jLabelMyPrezzoTotale.setText("-");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonMyAnnullaIscrizione, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelMyCosto))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(50, 50, 50)
                                .addComponent(jLabelMyPrezzoTotale))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelMyManagerMail)
                                    .addComponent(jLabelMyManager)))
                            .addComponent(jLabel23))
                        .addGap(0, 98, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelMyCosto))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabelMyPrezzoTotale))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabelMyManager))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMyManagerMail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonMyAnnullaIscrizione)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabsCompetizioni.addTab("Le tue iscrizioni", jPanel1);
        jPanel1.setName("jPanelCompPrenotate");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabsCompetizioni, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabsCompetizioni)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    void setCostoCompetizione(int value)
    {
        jLabelMyCosto.setText(Integer.toString(value) + "€");
    }
    void setMyOptional(int index, boolean value)
    {
        JCheckBox jCheckBox;
        switch (index)
        {
            case 0:
                jCheckBox = jCheckBoxMyOptional1;
                break;
            case 1:
                jCheckBox = jCheckBoxMyOptional2;
                break;
            case 2:
                jCheckBox = jCheckBoxMyOptional3;
                break;
            default:
                // caso non gestito
                return;
        }
        jCheckBox.setSelected(value);
    }
    void setMyOptionalPrice(int index, int value)
    {
        JLabel jLabel;
        switch (index)
        {
            case 0:
                jLabel = jLabelMyOptionalCosto1;
                break;
            case 1:
                jLabel = jLabelMyOptionalCosto2;
                break;
            case 2:
                jLabel = jLabelMyOptionalCosto3;
                break;
            default:
                // caso non gestito
                return;
        }
        jLabel.setText(Integer.toString(value) + "€");
    }
    void setMyTotalPrice(int value)
    {
        jLabelMyPrezzoTotale.setText(Integer.toString(value) + "€");
    }
    void setMyManagerName(String value)
    {
        jLabelMyManager.setText(value);
    }
    void setMyManagerMail(String value)
    {
        jLabelMyManagerMail.setText(value);
    }
    
    private void jListMyIscrizioniValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListMyIscrizioniValueChanged
        try {
            // TODO add your handling code here:
            CompetizionePrenotataLoad(jListMyIscrizioni.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(JFrameHomePartec.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jListMyIscrizioniValueChanged
    
    void CompetizionePrenotataLoad (int index) throws SQLException
    {
        if (index < 0) return;
        float prezzo_tot=0;
        Competizione c=agro.getCompetizione(listComp[index].getId());
        jLabelMyCosto.setText(String.valueOf(c.getPrezzo())+"€");
        if(jCheckBoxMyOptional1.isSelected())
            jCheckBoxMyOptional1.setSelected(false);
        if(jCheckBoxMyOptional2.isSelected())
            jCheckBoxMyOptional2.setSelected(false);
        if(jCheckBoxMyOptional3.isSelected())
            jCheckBoxMyOptional3.setSelected(false);
        jCheckBoxMyOptional1.setEnabled(false);
        jCheckBoxMyOptional2.setEnabled(false);
        jCheckBoxMyOptional3.setEnabled(false);
        jCheckBoxMyOptional1.setText("-");
        jCheckBoxMyOptional1.setText("-");
        jCheckBoxMyOptional1.setText("-");
        jLabelMyOptionalCosto1.setText("-");
        jLabelMyOptionalCosto1.setText("-");
        jLabelMyOptionalCosto1.setText("-");
        listOpt=c.getOptional();
        if(listOpt!=null)
        {
            for (int i=0;i<listOpt.length;i++)
            {
                if(listOpt[i].getNome().compareTo("Colazione")==0)
                {
                    jCheckBoxMyOptional1.setEnabled(true);
                    jCheckBoxMyOptional1.setText(listOpt[i].getNome()); 
                    jLabelMyOptionalCosto1.setText(String.valueOf(listOpt[i].getPrezzo())+"€");
                    if (agro.isOptionalSelezionato(listOpt[i], c))
                    {
                        jCheckBoxMyOptional1.setSelected(true);
                        prezzo_tot+=listOpt[i].getPrezzo();
                    }
                }
                else if (listOpt[i].getNome().compareTo("Pranzo")==0)
                    {
                        jCheckBoxMyOptional2.setEnabled(true);
                        jCheckBoxMyOptional2.setText(listOpt[i].getNome());
                        jLabelMyOptionalCosto2.setText(String.valueOf(listOpt[i].getPrezzo())+"€");
                        if (agro.isOptionalSelezionato(listOpt[i], c))
                        {
                            jCheckBoxMyOptional2.setSelected(true);
                            prezzo_tot+=listOpt[i].getPrezzo();
                        }
                    }
                    else
                    {
                        jCheckBoxMyOptional3.setEnabled(true);
                        jCheckBoxMyOptional3.setText(listOpt[i].getNome());
                        jLabelMyOptionalCosto3.setText(String.valueOf(listOpt[i].getPrezzo())+"€");
                        if (agro.isOptionalSelezionato(listOpt[i], c))
                        {    
                            jCheckBoxMyOptional3.setSelected(true);
                            prezzo_tot+=listOpt[i].getPrezzo();
                        }
                    }
            }    
        }
        jLabelMyPrezzoTotale.setText(String.valueOf(c.getPrezzo()+prezzo_tot));
        jLabelMyManager.setText(c.getManager().getNome()+" "+c.getManager().getCognome());
        jLabelMyManagerMail.setText(c.getManager().getMail());
    }
    
    void CompetizioneDisponibileLoad (int index) throws SQLException
    {
        if (index < 0) return;
        Competizione c=agro.getCompetizione(listComp[index].getId());
        jLabelNPart.setText(String.valueOf(c.getNMax()-c.getNPart()));
        jLabelPrezzo_Comp.setText(String.valueOf(c.getPrezzo())+"€");
        jCheckBoxOpt1.setEnabled(false);
        jCheckBoxOpt2.setEnabled(false);
        jCheckBoxOpt3.setEnabled(false);
        jCheckBoxOpt1.setText("-");
        jCheckBoxOpt2.setText("-");
        jCheckBoxOpt3.setText("-");
        jLabelPrezzoOpt1.setText("-");
        jLabelPrezzoOpt2.setText("-");
        jLabelPrezzoOpt3.setText("-");
        listOpt=c.getOptional();
        if(listOpt!=null)
        {    
        for (int i=0;i<listOpt.length;i++)
        {
            if(listOpt[i].getNome().compareTo("Colazione")==0)
            {
                jCheckBoxOpt1.setEnabled(true);
                jCheckBoxOpt1.setText(listOpt[i].getNome()); 
                jLabelPrezzoOpt1.setText(String.valueOf(listOpt[i].getPrezzo())+"€");
            }
            else if(listOpt[i].getNome().compareTo("Pranzo")==0)
                {  
                   jCheckBoxOpt2.setEnabled(true);
                   jCheckBoxOpt2.setText(listOpt[i].getNome()); 
                   jLabelPrezzoOpt2.setText(String.valueOf(listOpt[i].getPrezzo())+"€");
                }
                else
                {
                   jCheckBoxOpt3.setEnabled(true);
                   jCheckBoxOpt3.setText(listOpt[i].getNome()); 
                   jLabelPrezzoOpt3.setText(String.valueOf(listOpt[i].getPrezzo())+"€");
                }               
        }
        }
        jLabelPrezzoTot.setText(String.valueOf(c.getPrezzo()));
        jLabelMC.setText(c.getManager().getNome()+" "+c.getManager().getCognome());
        jLabelMailMC.setText(c.getManager().getMail());
    }        
    private void jListDisponibiliValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListDisponibiliValueChanged
        try {
            // TODO add your handling code here:
            CompetizioneDisponibileLoad(jListDisponibili.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(JFrameHomePartec.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jListDisponibiliValueChanged

    private void jIscrizioneCompetizioneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jIscrizioneCompetizioneActionPerformed
        boolean [] opt =new boolean [3];
        int nopt=0;
        if (jCheckBoxOpt1.isSelected())
            nopt++;
        if (jCheckBoxOpt2.isSelected())
            nopt++;
        if (jCheckBoxOpt3.isSelected())
            nopt++;
        Optional [] opt_scelti=new Optional[nopt];
        int j=0;
        if (jCheckBoxOpt1.isSelected())
        {
            for (int i=0;i<listOpt.length;i++)
            {
                if(listOpt[i].getNome().compareTo("Colazione")==0)
                {
                    opt_scelti[j]=listOpt[i];
                    j++;
                    break;
                }
            }
        }
        if (jCheckBoxOpt2.isSelected())
        {
            for (int i=0;i<listOpt.length;i++)
            {
                if(listOpt[i].getNome().compareTo("Pranzo")==0)
                {
                    opt_scelti[j]=listOpt[i];
                    j++;
                    break;
                }
            }
        }
        if (jCheckBoxOpt3.isSelected())
        {
            for (int i=0;i<listOpt.length;i++)
            {
                if(listOpt[i].getNome().compareTo("Pernotto")==0)
                {
                    opt_scelti[j]=listOpt[i];
                    j++;
                    break;
                }
            }
        }
        try {
            agro.addIscrizioneCompetizione(listComp[jListDisponibili.getSelectedIndex()],opt_scelti);
                    JOptionPane.showMessageDialog(null, "Prenotazione effettuata\ncon successo!\n"
                    , "Successo", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Impossibile caricare le competizioni\n" +
                    ex.toString(), "Errore", JOptionPane.ERROR_MESSAGE);
        } catch (SrcScadutaException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.toString(), "Errore", JOptionPane.ERROR_MESSAGE);
        }
        finally
        {
            JFrame jFrame=new JFrameHomePartec(agro);
            this.setVisible(false);
            jFrame.pack();
            jFrame.setVisible(true);
        }
    }//GEN-LAST:event_jIscrizioneCompetizioneActionPerformed

    private void jCheckBoxOpt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxOpt2ActionPerformed
        float prezzo=0;
        for (int i=0;i<listOpt.length;i++)
        {
            if(listOpt[i].getNome().compareTo("Pranzo")==0)
            {
                prezzo=listOpt[i].getPrezzo();
                break;
            }
        }
        if(jCheckBoxOpt2.isSelected())
            jLabelPrezzoTot.setText(String.valueOf(Float.valueOf(jLabelPrezzoTot.getText())+prezzo));
        else
            jLabelPrezzoTot.setText(String.valueOf(Float.valueOf(jLabelPrezzoTot.getText())-prezzo));
    }//GEN-LAST:event_jCheckBoxOpt2ActionPerformed

    private void jCheckBoxOpt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxOpt1ActionPerformed
        // TODO add your handling code here:
        float prezzo=0;
        for (int i=0;i<listOpt.length;i++)
        {
            if(listOpt[i].getNome().compareTo("Colazione")==0)
            {
                prezzo=listOpt[i].getPrezzo();
                break;
            }
      
        }
        if(jCheckBoxOpt1.isSelected())
            jLabelPrezzoTot.setText(String.valueOf(Float.valueOf(jLabelPrezzoTot.getText())+prezzo));
        else
            jLabelPrezzoTot.setText(String.valueOf(Float.valueOf(jLabelPrezzoTot.getText())-prezzo));  
    }//GEN-LAST:event_jCheckBoxOpt1ActionPerformed

    private void jCheckBoxOpt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxOpt3ActionPerformed
        // TODO add your handling code here:
        float prezzo=0;
        for (int i=0;i<listOpt.length;i++)
        {
            if(listOpt[i].getNome().compareTo("Pernotto")==0)
            {
                prezzo=listOpt[i].getPrezzo();
                break;
            }
        }
        if(jCheckBoxOpt3.isSelected())
            jLabelPrezzoTot.setText(String.valueOf(Float.valueOf(jLabelPrezzoTot.getText())+prezzo));
        else
            jLabelPrezzoTot.setText(String.valueOf(Float.valueOf(jLabelPrezzoTot.getText())-prezzo));  
    }//GEN-LAST:event_jCheckBoxOpt3ActionPerformed

    private void jTabsCompetizioniStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabsCompetizioniStateChanged
        // TODO add your handling code here:
        Component c=jTabsCompetizioni.getSelectedComponent();
        String n=c.getName();
        try
        {
            if (n!=null)
            {
            if (n.compareTo("jPanelCompDisponibili")==0)
                CompetizioniDisponibiliLoadList();
            else if (n.compareTo("jPanelCompPrenotate")==0)
                    CompetizioniPrenotateLoadList();
            }
        }
        catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(null, "Impossibile caricare le competizioni\n" +
                    ex.toString(), "Errore", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTabsCompetizioniStateChanged

    private void jCheckBoxMyOptional1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMyOptional1ActionPerformed
        // TODO add your handling code here:
        float prezzo=0;
        for (int i=0;i<listOpt.length;i++)
        {
            if(listOpt[i].getNome().compareTo("Colazione")==0)
            {
                prezzo=listOpt[i].getPrezzo();
                break;
            }
        }
        if(jCheckBoxMyOptional1.isSelected())
            jLabelMyPrezzoTotale.setText(String.valueOf(Float.valueOf(jLabelMyPrezzoTotale.getText())+prezzo));
        else
            jLabelMyPrezzoTotale.setText(String.valueOf(Float.valueOf(jLabelMyPrezzoTotale.getText())-prezzo)); 
    }//GEN-LAST:event_jCheckBoxMyOptional1ActionPerformed

    private void jCheckBoxMyOptional2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMyOptional2ActionPerformed
        // TODO add your handling code here:
        float prezzo=0;
        for (int i=0;i<listOpt.length;i++)
        {
            if(listOpt[i].getNome().compareTo("Pranzo")==0)
            {
                prezzo=listOpt[i].getPrezzo();
                break;
            }
        }
        if(jCheckBoxMyOptional2.isSelected())
            jLabelMyPrezzoTotale.setText(String.valueOf(Float.valueOf(jLabelMyPrezzoTotale.getText())+prezzo));
        else
            jLabelMyPrezzoTotale.setText(String.valueOf(Float.valueOf(jLabelMyPrezzoTotale.getText())-prezzo)); 
    }//GEN-LAST:event_jCheckBoxMyOptional2ActionPerformed

    private void jCheckBoxMyOptional3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMyOptional3ActionPerformed
        // TODO add your handling code here:
        float prezzo=0;
        for (int i=0;i<listOpt.length;i++)
        {
            if(listOpt[i].getNome().compareTo("Pernotto")==0)
            {
                prezzo=listOpt[i].getPrezzo();
                break;
            }
        }
        if(jCheckBoxMyOptional3.isSelected())
            jLabelMyPrezzoTotale.setText(String.valueOf(Float.valueOf(jLabelMyPrezzoTotale.getText())+prezzo));
        else
            jLabelMyPrezzoTotale.setText(String.valueOf(Float.valueOf(jLabelMyPrezzoTotale.getText())-prezzo)); 
    }//GEN-LAST:event_jCheckBoxMyOptional3ActionPerformed

    private void jButtonMyOptionalAnnullaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMyOptionalAnnullaActionPerformed
        try {
            // TODO add your handling code here:
            CompetizionePrenotataLoad(jListMyIscrizioni.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(JFrameHomePartec.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonMyOptionalAnnullaActionPerformed

    private void jButtonMyOptionalConfermaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMyOptionalConfermaActionPerformed
        // TODO add your handling code here:
        try {
            for (int i=0;i<listOpt.length;i++)
            {
                
                if(listOpt[i].getNome().compareTo("Colazione")==0)
                    agro.setOptionalPrenotazione(listOpt[i],agro.getCompetizione(listComp[jListMyIscrizioni.getSelectedIndex()].getId()),jCheckBoxMyOptional1.isSelected());   
                else if(listOpt[i].getNome().compareTo("Pranzo")==0)
                    agro.setOptionalPrenotazione(listOpt[i],agro.getCompetizione(listComp[jListMyIscrizioni.getSelectedIndex()].getId()),jCheckBoxMyOptional2.isSelected());
                    else if(listOpt[i].getNome().compareTo("Pernotto")==0)
                        agro.setOptionalPrenotazione(listOpt[i],agro.getCompetizione(listComp[jListMyIscrizioni.getSelectedIndex()].getId()),jCheckBoxMyOptional3.isSelected());

                

            }
            
            JOptionPane.showMessageDialog(null, "Modifica effettuata\ncon successo!\n"
                    , "Successo", JOptionPane.INFORMATION_MESSAGE); 
                        }catch (SQLException ex) {
                     Logger.getLogger(JFrameHomePartec.class.getName()).log(Level.SEVERE, null, ex);
                }
                finally
                {
                    JFrame jFrame=new JFrameHomePartec(agro);
                    this.setVisible(false);
                    jFrame.pack();
                    jFrame.setVisible(true);
                }   
    }//GEN-LAST:event_jButtonMyOptionalConfermaActionPerformed

    private void jButtonMyAnnullaIscrizioneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMyAnnullaIscrizioneActionPerformed
        try 
        {
            // TODO add your handling code here:
            agro.AnnullaPrenotazione(agro.getCompetizione(listComp[jListMyIscrizioni.getSelectedIndex()].getId()));
            JOptionPane.showMessageDialog(null, "Annullamento prenotazione\n effettuato successo!\n"
            , "Successo", JOptionPane.INFORMATION_MESSAGE);
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(JFrameHomePartec.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally
        {
            JFrame jFrame=new JFrameHomePartec(agro);
            this.setVisible(false);
            jFrame.pack();
            jFrame.setVisible(true);
        }
    }//GEN-LAST:event_jButtonMyAnnullaIscrizioneActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonMyAnnullaIscrizione;
    private javax.swing.JButton jButtonMyOptionalAnnulla;
    private javax.swing.JButton jButtonMyOptionalConferma;
    private javax.swing.JCheckBox jCheckBoxMyOptional1;
    private javax.swing.JCheckBox jCheckBoxMyOptional2;
    private javax.swing.JCheckBox jCheckBoxMyOptional3;
    private javax.swing.JCheckBox jCheckBoxOpt1;
    private javax.swing.JCheckBox jCheckBoxOpt2;
    private javax.swing.JCheckBox jCheckBoxOpt3;
    private javax.swing.JButton jIscrizioneCompetizione;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelMC;
    private javax.swing.JLabel jLabelMailMC;
    private javax.swing.JLabel jLabelMyCosto;
    private javax.swing.JLabel jLabelMyManager;
    private javax.swing.JLabel jLabelMyManagerMail;
    private javax.swing.JLabel jLabelMyOptionalCosto1;
    private javax.swing.JLabel jLabelMyOptionalCosto2;
    private javax.swing.JLabel jLabelMyOptionalCosto3;
    private javax.swing.JLabel jLabelMyPrezzoTotale;
    private javax.swing.JLabel jLabelNPart;
    private javax.swing.JLabel jLabelPrezzoOpt1;
    private javax.swing.JLabel jLabelPrezzoOpt2;
    private javax.swing.JLabel jLabelPrezzoOpt3;
    private javax.swing.JLabel jLabelPrezzoTot;
    private javax.swing.JLabel jLabelPrezzo_Comp;
    private javax.swing.JList jListDisponibili;
    private javax.swing.JList jListMyIscrizioni;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabsCompetizioni;
    // End of variables declaration//GEN-END:variables
}
